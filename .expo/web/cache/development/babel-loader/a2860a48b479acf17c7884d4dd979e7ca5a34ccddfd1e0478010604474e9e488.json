{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { auth } from 'firebase/auth';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSignedin = _useState2[0],\n    SetIsSignedin = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var RegisterUser = function RegisterUser() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: RegisterUser,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782f9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","auth","getAuth","createUserWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","isSignedin","SetIsSignedin","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","RegisterUser","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","KeyboardAvoidingView","style","styles","container","behavior","children","View","inputContainer","TextInput","placeholder","value","onChangeText","text","input","secureTextEntry","buttonContainer","TouchableOpacity","onPress","button","Text","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"sources":["C:/Users/Alexa/Pet-app/screens/LoginScreen.js"],"sourcesContent":["import { View, Text, StyleSheet, KeyboardAvoidingView, TextInput, TouchableOpacity } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { auth } from 'firebase/auth'\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst LoginScreen = () => {\r\nconst [isSignedin, SetIsSignedin] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst   RegisterUser = () =>{\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n    .then((userCredential) => {\r\n        const user = userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n      });\r\n    \r\n\r\n}\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n        style={styles.container}\r\n        behavior=\"padding\"\r\n    >\r\n        <View style={styles.inputContainer}>\r\n            <TextInput \r\n                placeholder='Email'\r\n                value={email}\r\n                onChangeText={text => setEmail(text) }\r\n                style={styles.input}            \r\n            />\r\n            <TextInput \r\n                placeholder='Password'\r\n                value={password}\r\n                onChangeText={text => setPassword(text) }\r\n                style={styles.input}        \r\n                secureTextEntry ={true}    \r\n            />\r\n\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n            <TouchableOpacity\r\n                onPress={() => {}}\r\n                style={styles.button}\r\n            >\r\n                <Text style={styles.buttonText}>Login</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={RegisterUser}\r\n                style={[styles.button, styles.buttonOutline]}\r\n            >\r\n                <Text style={styles.buttonOutlineText}>Register</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    inputContainer: {\r\n        width: '80%'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40,\r\n    },\r\n    button: {\r\n        backgroundColor: '#0782F9',\r\n        width: '100%',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    buttonOutlineText: {\r\n        color: '#0782f9',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}